{"ast":null,"code":"import React,{useEffect,useState,useCallback}from'react';import'./Form.css';import{useTelegram}from'../../hooks/useTelegram';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Form=()=>{const[country,setCountry]=useState('');const[street,setStreet]=useState('');const[subject,setSubject]=useState('physical');const{tg}=useTelegram();const onSendData=useCallback(()=>{const data={country,street,subject};tg.SendData(JSON.stringify(data));},[country,street,subject,tg]);useEffect(()=>{tg.onEvent('mainButtonClicked',onSendData);return()=>{tg.offEvent('mainButtonClicked',onSendData);};},[onSendData,tg]);useEffect(()=>{tg.MainButton.setParams({text:'Send data'});},[tg]);useEffect(()=>{if(!street||!country){tg.MainButton.hide();}else{tg.MainButton.show();}},[country,street,tg]);const onChangeCountry=e=>{setCountry(e.target.value);};const onChangeStreet=e=>{setStreet(e.target.value);};const onChangeSubject=e=>{setSubject(e.target.value);};return/*#__PURE__*/_jsxs(\"div\",{className:\"form\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Enter your data\"}),/*#__PURE__*/_jsx(\"input\",{className:'input',type:\"text\",placeholder:'country',value:country,onChange:onChangeCountry}),/*#__PURE__*/_jsx(\"input\",{className:'input',type:\"text\",placeholder:'street',value:street,onChange:onChangeStreet}),/*#__PURE__*/_jsxs(\"select\",{value:subject,onChange:onChangeSubject,className:'select',children:[/*#__PURE__*/_jsx(\"option\",{value:'physical',children:\"Private\"}),/*#__PURE__*/_jsx(\"option\",{value:'legal',children:\"Business\"})]})]});};export default Form;","map":{"version":3,"names":["React","useEffect","useState","useCallback","useTelegram","jsx","_jsx","jsxs","_jsxs","Form","country","setCountry","street","setStreet","subject","setSubject","tg","onSendData","data","SendData","JSON","stringify","onEvent","offEvent","MainButton","setParams","text","hide","show","onChangeCountry","e","target","value","onChangeStreet","onChangeSubject","className","children","type","placeholder","onChange"],"sources":["/Users/serhii_bondariev/Documents/GitHub/tg-bot/client/src/components/Form/Form.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport './Form.css';\nimport { useTelegram } from '../../hooks/useTelegram';\n\nconst Form = () => {\n  const [country, setCountry] = useState('');\n  const [street, setStreet] = useState('');\n  const [subject, setSubject] = useState('physical');\n  const { tg } = useTelegram();\n\n  const onSendData = useCallback(() => {\n    const data = {\n      country,\n      street,\n      subject\n    };\n    tg.SendData(JSON.stringify(data));\n  }, [country, street, subject, tg]);\n\n  useEffect(() => {\n    tg.onEvent('mainButtonClicked', onSendData);\n    return () => {\n      tg.offEvent('mainButtonClicked', onSendData);\n    };\n  }, [onSendData, tg]);\n\n  useEffect(() => {\n    tg.MainButton.setParams({\n      text: 'Send data'\n    });\n  }, [tg]);\n\n  useEffect(() => {\n    if (!street || !country) {\n      tg.MainButton.hide();\n    } else {\n      tg.MainButton.show();\n    }\n  }, [country, street, tg]);\n\n  const onChangeCountry = (e) => {\n    setCountry(e.target.value);\n  };\n\n  const onChangeStreet = (e) => {\n    setStreet(e.target.value);\n  };\n\n  const onChangeSubject = (e) => {\n    setSubject(e.target.value);\n  };\n\n  return (\n    <div className={\"form\"}>\n      <h3>Enter your data</h3>\n      <input className={'input'} type=\"text\" placeholder={'country'} value={country} onChange={onChangeCountry} />\n      <input className={'input'} type=\"text\" placeholder={'street'} value={street} onChange={onChangeStreet} />\n      <select value={subject} onChange={onChangeSubject} className={'select'}>\n        <option value={'physical'}>Private</option>\n        <option value={'legal'}>Business</option>\n      </select>\n    </div>\n  );\n};\n\nexport default Form;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}