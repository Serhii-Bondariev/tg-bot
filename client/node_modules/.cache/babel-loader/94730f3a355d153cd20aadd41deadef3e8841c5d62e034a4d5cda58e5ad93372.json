{"ast":null,"code":"var _jsxFileName = \"/Users/serhii_bondariev/Documents/GitHub/tg-bot/client/src/components/ProductList/ProductList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ProductList.css';\nimport ProductItem from \"../ProductItem/ProductItem\";\nimport { useTelegram } from \"../../hooks/useTelegram\";\nimport { useCallback, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst products = [{\n  id: '1',\n  title: 'Джинсы',\n  price: 5000,\n  description: 'Синего цвета, прямые'\n}, {\n  id: '2',\n  title: 'Куртка',\n  price: 12000,\n  description: 'Зеленого цвета, теплая'\n}, {\n  id: '3',\n  title: 'Джинсы 2',\n  price: 5000,\n  description: 'Синего цвета, прямые'\n}, {\n  id: '4',\n  title: 'Куртка 8',\n  price: 122,\n  description: 'Зеленого цвета, теплая'\n}, {\n  id: '5',\n  title: 'Джинсы 3',\n  price: 5000,\n  description: 'Синего цвета, прямые'\n}, {\n  id: '6',\n  title: 'Куртка 7',\n  price: 600,\n  description: 'Зеленого цвета, теплая'\n}, {\n  id: '7',\n  title: 'Джинсы 4',\n  price: 5500,\n  description: 'Синего цвета, прямые'\n}, {\n  id: '8',\n  title: 'Куртка 5',\n  price: 12000,\n  description: 'Зеленого цвета, теплая'\n}];\nconst getTotalPrice = (items = []) => {\n  return items.reduce((acc, item) => {\n    return acc += item.price;\n  }, 0);\n};\nconst ProductList = () => {\n  _s();\n  const [addedItems, setAddedItems] = useState([]);\n  const {\n    tg,\n    queryId\n  } = useTelegram();\n  const onSendData = useCallback(() => {\n    const data = {\n      products: addedItems,\n      totalPrice: getTotalPrice(addedItems),\n      queryId\n    };\n    fetch('http://85.119.146.179:8000/web-data', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n  }, [addedItems]);\n  useEffect(() => {\n    tg.onEvent('mainButtonClicked', onSendData);\n    return () => {\n      tg.offEvent('mainButtonClicked', onSendData);\n    };\n  }, [onSendData]);\n  const onAdd = product => {\n    const alreadyAdded = addedItems.find(item => item.id === product.id);\n    let newItems = [];\n    if (alreadyAdded) {\n      newItems = addedItems.filter(item => item.id !== product.id);\n    } else {\n      newItems = [...addedItems, product];\n    }\n    setAddedItems(newItems);\n    if (newItems.length === 0) {\n      tg.MainButton.hide();\n    } else {\n      tg.MainButton.show();\n      tg.MainButton.setParams({\n        text: `Купить ${getTotalPrice(newItems)}`\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'list',\n    children: products.map(item => /*#__PURE__*/_jsxDEV(ProductItem, {\n      product: item,\n      onAdd: onAdd,\n      className: 'item'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductList, \"jAX2T+hqSZ3yM/q+7CCaaWi+GhQ=\", false, function () {\n  return [useTelegram];\n});\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","ProductItem","useTelegram","useCallback","useEffect","jsxDEV","_jsxDEV","products","id","title","price","description","getTotalPrice","items","reduce","acc","item","ProductList","_s","addedItems","setAddedItems","tg","queryId","onSendData","data","totalPrice","fetch","method","headers","body","JSON","stringify","onEvent","offEvent","onAdd","product","alreadyAdded","find","newItems","filter","length","MainButton","hide","show","setParams","text","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/serhii_bondariev/Documents/GitHub/tg-bot/client/src/components/ProductList/ProductList.jsx"],"sourcesContent":["import React, {useState} from 'react';\nimport './ProductList.css';\nimport ProductItem from \"../ProductItem/ProductItem\";\nimport {useTelegram} from \"../../hooks/useTelegram\";\nimport {useCallback, useEffect} from \"react\";\n\nconst products = [\n    {id: '1', title: 'Джинсы', price: 5000, description: 'Синего цвета, прямые'},\n    {id: '2', title: 'Куртка', price: 12000, description: 'Зеленого цвета, теплая'},\n    {id: '3', title: 'Джинсы 2', price: 5000, description: 'Синего цвета, прямые'},\n    {id: '4', title: 'Куртка 8', price: 122, description: 'Зеленого цвета, теплая'},\n    {id: '5', title: 'Джинсы 3', price: 5000, description: 'Синего цвета, прямые'},\n    {id: '6', title: 'Куртка 7', price: 600, description: 'Зеленого цвета, теплая'},\n    {id: '7', title: 'Джинсы 4', price: 5500, description: 'Синего цвета, прямые'},\n    {id: '8', title: 'Куртка 5', price: 12000, description: 'Зеленого цвета, теплая'},\n]\n\nconst getTotalPrice = (items = []) => {\n    return items.reduce((acc, item) => {\n        return acc += item.price\n    }, 0)\n}\n\nconst ProductList = () => {\n    const [addedItems, setAddedItems] = useState([]);\n    const {tg, queryId} = useTelegram();\n\n    const onSendData = useCallback(() => {\n        const data = {\n            products: addedItems,\n            totalPrice: getTotalPrice(addedItems),\n            queryId,\n        }\n        fetch('http://85.119.146.179:8000/web-data', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data)\n        })\n    }, [addedItems])\n\n    useEffect(() => {\n        tg.onEvent('mainButtonClicked', onSendData)\n        return () => {\n            tg.offEvent('mainButtonClicked', onSendData)\n        }\n    }, [onSendData])\n\n    const onAdd = (product) => {\n        const alreadyAdded = addedItems.find(item => item.id === product.id);\n        let newItems = [];\n\n        if(alreadyAdded) {\n            newItems = addedItems.filter(item => item.id !== product.id);\n        } else {\n            newItems = [...addedItems, product];\n        }\n\n        setAddedItems(newItems)\n\n        if(newItems.length === 0) {\n            tg.MainButton.hide();\n        } else {\n            tg.MainButton.show();\n            tg.MainButton.setParams({\n                text: `Купить ${getTotalPrice(newItems)}`\n            })\n        }\n    }\n\n    return (\n        <div className={'list'}>\n            {products.map(item => (\n                <ProductItem\n                    product={item}\n                    onAdd={onAdd}\n                    className={'item'}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default ProductList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}