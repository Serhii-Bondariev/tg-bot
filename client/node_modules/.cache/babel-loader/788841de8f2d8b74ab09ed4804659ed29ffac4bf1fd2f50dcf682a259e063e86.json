{"ast":null,"code":"var _jsxFileName = \"/Users/serhii_bondariev/Documents/GitHub/tg-bot/client/src/components/Form/Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport './Form.css';\nimport { useTelegram } from '../../hooks/useTelegram';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [country, setCountry] = useState('');\n  const [street, setStreet] = useState('');\n  const [subject, setSubject] = useState('physical');\n  const {\n    tg\n  } = useTelegram();\n  const onSendData = useCallback(() => {\n    const data = {\n      country,\n      street,\n      subject\n    };\n    tg.SendData(JSON.stringify(data));\n  }, [country, street, subject, tg]);\n  useEffect(() => {\n    tg.onEvent('mainButtonClicked', onSendData);\n    return () => {\n      tg.offEvent('mainButtonClicked', onSendData);\n    };\n  }, [onSendData, tg]);\n  useEffect(() => {\n    tg.MainButton.setParams({\n      text: 'Send data'\n    });\n  }, [tg]);\n  useEffect(() => {\n    if (!street || !country) {\n      tg.MainButton.hide();\n    } else {\n      tg.MainButton.show();\n    }\n  }, [country, street, tg]);\n  const onChangeCountry = e => {\n    setCountry(e.target.value);\n  };\n  const onChangeStreet = e => {\n    setStreet(e.target.value);\n  };\n  const onChangeSubject = e => {\n    setSubject(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Enter your data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: 'input',\n      type: \"text\",\n      placeholder: 'country',\n      value: country,\n      onChange: onChangeCountry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: 'input',\n      type: \"text\",\n      placeholder: 'street',\n      value: street,\n      onChange: onChangeStreet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: subject,\n      onChange: onChangeSubject,\n      className: 'select',\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: 'physical',\n        children: \"Private\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 'legal',\n        children: \"Business\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"lBwFANzv2ezZG38JDRDq7PwS+Hc=\", false, function () {\n  return [useTelegram];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useTelegram","jsxDEV","_jsxDEV","Form","_s","country","setCountry","street","setStreet","subject","setSubject","tg","onSendData","data","SendData","JSON","stringify","onEvent","offEvent","MainButton","setParams","text","hide","show","onChangeCountry","e","target","value","onChangeStreet","onChangeSubject","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/serhii_bondariev/Documents/GitHub/tg-bot/client/src/components/Form/Form.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport './Form.css';\nimport { useTelegram } from '../../hooks/useTelegram';\n\nconst Form = () => {\n  const [country, setCountry] = useState('');\n  const [street, setStreet] = useState('');\n  const [subject, setSubject] = useState('physical');\n  const { tg } = useTelegram();\n\n  const onSendData = useCallback(() => {\n    const data = {\n      country,\n      street,\n      subject\n    };\n    tg.SendData(JSON.stringify(data));\n  }, [country, street, subject, tg]);\n\n  useEffect(() => {\n    tg.onEvent('mainButtonClicked', onSendData);\n    return () => {\n      tg.offEvent('mainButtonClicked', onSendData);\n    };\n  }, [onSendData, tg]);\n\n  useEffect(() => {\n    tg.MainButton.setParams({\n      text: 'Send data'\n    });\n  }, [tg]);\n\n  useEffect(() => {\n    if (!street || !country) {\n      tg.MainButton.hide();\n    } else {\n      tg.MainButton.show();\n    }\n  }, [country, street, tg]);\n\n  const onChangeCountry = (e) => {\n    setCountry(e.target.value);\n  };\n\n  const onChangeStreet = (e) => {\n    setStreet(e.target.value);\n  };\n\n  const onChangeSubject = (e) => {\n    setSubject(e.target.value);\n  };\n\n  return (\n    <div className={\"form\"}>\n      <h3>Enter your data</h3>\n      <input className={'input'} type=\"text\" placeholder={'country'} value={country} onChange={onChangeCountry} />\n      <input className={'input'} type=\"text\" placeholder={'street'} value={street} onChange={onChangeStreet} />\n      <select value={subject} onChange={onChangeSubject} className={'select'}>\n        <option value={'physical'}>Private</option>\n        <option value={'legal'}>Business</option>\n      </select>\n    </div>\n  );\n};\n\nexport default Form;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}